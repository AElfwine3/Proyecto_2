
import Estructuras.*;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ushi
 */
public class Administrador extends javax.swing.JFrame {

    static ListaEstudiante lista_estudiante = new ListaEstudiante();
    static ListaCatedratico lista_catedratico = new ListaCatedratico();
    static ListaCurso lista_curso = new ListaCurso();
    static ListaSemestre lista_semestre = new ListaSemestre();
    static String[][] llenartablaEstudiante;
    static String[][] llenartablaCatedratico;
    static String[][] llenartablaCurso;
    String accion_Estudiante = "guardar";
    String accion_Catedratico = "guardar";
    String accion_Curso = "guardar";
    int Indice_Estudiantes = -1;
    int Indice_Catedraticos = -1;
    int Indice_Cursos = -1;

    /**
     * Creates new form Administrador
     */
    public Administrador() {
        /*DefaultListModel modelo = new DefaultListModel();
        modelo.removeAllElements();*/
        DefaultComboBoxModel cbmodelo = new DefaultComboBoxModel();
        cbmodelo.removeAllElements();
        initComponents();
        cbpre.setModel(cbmodelo);
        cbpost.setModel(cbmodelo);
        //listapre.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtcarne_Estudiante = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcui_Estudiante = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtnombre_Estudiante = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcorreo_Estudiante = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtcreditos_Estudiante = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtcontraseña_Estudiante = new javax.swing.JTextField();
        bcancelar_AgregarE = new javax.swing.JButton();
        bagregar_E = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEstudiantes = new javax.swing.JTable();
        beliminarE = new javax.swing.JButton();
        bmodificarE = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        beliminarC = new javax.swing.JButton();
        bmodificarC = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaCatedraticos = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtcui_Catedratico = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtnombre_Catedratico = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtcorreo_Catedratico = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtcontraseña_Catedratico = new javax.swing.JTextField();
        bcancelar_AgregarC = new javax.swing.JButton();
        bagregar_C = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtCodigo_Curso = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtNombre_Curso = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCuiC_Curso = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCreditos_Curso = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtPreR = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtPostR = new javax.swing.JTextField();
        bcancelar_AgregarCurso = new javax.swing.JButton();
        bagregar_Curso = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtSeccion_Curso = new javax.swing.JTextField();
        bvisualizar_Curso = new javax.swing.JButton();
        cbpre = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaCursos = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbpost = new javax.swing.JComboBox<>();
        beliminar_Curso = new javax.swing.JButton();
        bmodificar_Curso = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        bcarga = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TPmensajescarga = new javax.swing.JTextPane();
        blimpiar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        bsalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrador");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Estudiante: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel1.setText("Carne:");

        txtcarne_Estudiante.setText("201504499");
        txtcarne_Estudiante.setNextFocusableComponent(txtcui_Estudiante);

        jLabel2.setText("Cui:");

        txtcui_Estudiante.setText("2534709860101");
        txtcui_Estudiante.setNextFocusableComponent(txtnombre_Estudiante);

        jLabel3.setText("Nombre:");

        txtnombre_Estudiante.setText("Elvin Mayen");
        txtnombre_Estudiante.setNextFocusableComponent(txtcorreo_Estudiante);
        txtnombre_Estudiante.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnombre_EstudianteFocusGained(evt);
            }
        });
        txtnombre_Estudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtnombre_EstudianteMouseClicked(evt);
            }
        });

        jLabel4.setText("Correo:");

        txtcorreo_Estudiante.setText("emayenc3@gmail.com");
        txtcorreo_Estudiante.setNextFocusableComponent(txtcreditos_Estudiante);
        txtcorreo_Estudiante.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtcorreo_EstudianteFocusGained(evt);
            }
        });
        txtcorreo_Estudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcorreo_EstudianteMouseClicked(evt);
            }
        });

        jLabel5.setText("Creditos:");

        txtcreditos_Estudiante.setText("250");
        txtcreditos_Estudiante.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtcreditos_Estudiante.setNextFocusableComponent(bagregar_E);
        txtcreditos_Estudiante.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtcreditos_EstudianteFocusGained(evt);
            }
        });
        txtcreditos_Estudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcreditos_EstudianteMouseClicked(evt);
            }
        });

        jLabel6.setText("Contraseña:");

        txtcontraseña_Estudiante.setEditable(false);
        txtcontraseña_Estudiante.setText("449925");
        txtcontraseña_Estudiante.setFocusable(false);

        bcancelar_AgregarE.setText("Cancelar");
        bcancelar_AgregarE.setNextFocusableComponent(bmodificarE);
        bcancelar_AgregarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelar_AgregarEActionPerformed(evt);
            }
        });

        bagregar_E.setText("Guardar");
        bagregar_E.setNextFocusableComponent(bcancelar_AgregarE);
        bagregar_E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregar_EActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcui_Estudiante)
                            .addComponent(txtcarne_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtnombre_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(33, 33, 33)
                            .addComponent(txtcorreo_Estudiante))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(24, 24, 24)
                            .addComponent(txtcreditos_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcontraseña_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bcancelar_AgregarE, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(bagregar_E, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtcarne_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtcorreo_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtcui_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtcreditos_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(bagregar_E)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bcancelar_AgregarE)))
                .addGap(4, 4, 4)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtnombre_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtcontraseña_Estudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        TablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            llenartablaEstudiante,
            new String [] {
                "Carne", "CUI", "Nombre", "Correo", "Creditos", "Contraseña"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaEstudiantes);

        beliminarE.setText("Eliminar");
        beliminarE.setNextFocusableComponent(bsalir);
        beliminarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliminarEActionPerformed(evt);
            }
        });

        bmodificarE.setText("Modificar");
        bmodificarE.setNextFocusableComponent(beliminarE);
        bmodificarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodificarEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bmodificarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(515, 515, 515)
                        .addComponent(beliminarE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beliminarE)
                    .addComponent(bmodificarE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estudiantes", jPanel1);

        beliminarC.setText("Eliminar");
        beliminarC.setNextFocusableComponent(bsalir);
        beliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliminarCActionPerformed(evt);
            }
        });

        bmodificarC.setText("Modificar");
        bmodificarC.setNextFocusableComponent(beliminarC);
        bmodificarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodificarCActionPerformed(evt);
            }
        });

        TablaCatedraticos.setModel(new javax.swing.table.DefaultTableModel(
            llenartablaCatedratico,
            new String [] {
                "CUI", "Nombre", "Correo", "Contraseña"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TablaCatedraticos);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Catedratico: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel8.setText("Cui:");

        txtcui_Catedratico.setText("2534709860101");
        txtcui_Catedratico.setNextFocusableComponent(txtnombre_Catedratico);

        jLabel9.setText("Nombre:");

        txtnombre_Catedratico.setText("Elvin Mayen");
        txtnombre_Catedratico.setNextFocusableComponent(txtcorreo_Catedratico);
        txtnombre_Catedratico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnombre_CatedraticoFocusGained(evt);
            }
        });
        txtnombre_Catedratico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtnombre_CatedraticoMouseClicked(evt);
            }
        });

        jLabel10.setText("Correo:");

        txtcorreo_Catedratico.setText("emayenc3@gmail.com");
        txtcorreo_Catedratico.setNextFocusableComponent(txtcontraseña_Catedratico);
        txtcorreo_Catedratico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtcorreo_CatedraticoFocusGained(evt);
            }
        });
        txtcorreo_Catedratico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcorreo_CatedraticoMouseClicked(evt);
            }
        });

        jLabel12.setText("Contraseña:");

        txtcontraseña_Catedratico.setEditable(false);
        txtcontraseña_Catedratico.setText("449925");
        txtcontraseña_Catedratico.setFocusable(false);
        txtcontraseña_Catedratico.setNextFocusableComponent(bagregar_C);

        bcancelar_AgregarC.setText("Cancelar");
        bcancelar_AgregarC.setNextFocusableComponent(bmodificarC);
        bcancelar_AgregarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelar_AgregarCActionPerformed(evt);
            }
        });

        bagregar_C.setText("Guardar");
        bagregar_C.setNextFocusableComponent(bcancelar_AgregarC);
        bagregar_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregar_CActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(34, 34, 34)
                        .addComponent(txtcui_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtnombre_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(33, 33, 33)
                        .addComponent(txtcorreo_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcontraseña_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bcancelar_AgregarC, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(bagregar_C, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtcui_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtcorreo_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtnombre_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtcontraseña_Catedratico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addComponent(bagregar_C)
                .addGap(18, 18, 18)
                .addComponent(bcancelar_AgregarC)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bmodificarC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(515, 515, 515)
                        .addComponent(beliminarC)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beliminarC)
                    .addComponent(bmodificarC))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Catedraticos", jPanel2);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Curso: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel7.setText("Codigo:");

        txtCodigo_Curso.setText("0770");
        txtCodigo_Curso.setNextFocusableComponent(txtNombre_Curso);

        jLabel11.setText("Nombre:");

        txtNombre_Curso.setText("Introduccion a la Programacion y Computacion 1");
        txtNombre_Curso.setNextFocusableComponent(txtCuiC_Curso);

        jLabel13.setText("Catedratico:");

        txtCuiC_Curso.setText("1234567890101");
        txtCuiC_Curso.setNextFocusableComponent(txtCreditos_Curso);

        jLabel14.setText("Creditos:");

        txtCreditos_Curso.setText("4");
        txtCreditos_Curso.setNextFocusableComponent(txtSeccion_Curso);

        jLabel15.setText("Pre-Requisitos:");

        txtPreR.setText("0103");
        txtPreR.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPreR.setNextFocusableComponent(txtPostR);

        jLabel16.setText("Post-Requisitos:");

        txtPostR.setText("0771,0796");
        txtPostR.setNextFocusableComponent(bagregar_Curso);

        bcancelar_AgregarCurso.setText("Cancelar");
        bcancelar_AgregarCurso.setNextFocusableComponent(bvisualizar_Curso);
        bcancelar_AgregarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelar_AgregarCursoActionPerformed(evt);
            }
        });

        bagregar_Curso.setText("Guardar");
        bagregar_Curso.setNextFocusableComponent(bcancelar_AgregarCurso);
        bagregar_Curso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregar_CursoActionPerformed(evt);
            }
        });

        jLabel17.setText("Seccion:");

        txtSeccion_Curso.setText("A");
        txtSeccion_Curso.setNextFocusableComponent(txtPreR);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel7))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCuiC_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPreR, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txtCreditos_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSeccion_Curso))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(txtPostR, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bcancelar_AgregarCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bagregar_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtCodigo_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txtCreditos_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(txtSeccion_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txtNombre_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPreR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCuiC_Curso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(txtPostR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(bagregar_Curso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bcancelar_AgregarCurso)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        bvisualizar_Curso.setText("Ver Detalles");
        bvisualizar_Curso.setNextFocusableComponent(bmodificar_Curso);
        bvisualizar_Curso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bvisualizar_CursoActionPerformed(evt);
            }
        });

        cbpre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        TablaCursos.setModel(new javax.swing.table.DefaultTableModel(
            llenartablaCurso,
            new String [] {
                "Codigo", "Nombre", "CUI Catedratico", "Créditos", "Seccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(TablaCursos);

        jLabel18.setText("Pre Requisitos");

        jLabel19.setText("Post Requisitos");

        cbpost.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        beliminar_Curso.setText("Eliminar");
        beliminar_Curso.setNextFocusableComponent(bsalir);
        beliminar_Curso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliminar_CursoActionPerformed(evt);
            }
        });

        bmodificar_Curso.setText("Modificar");
        bmodificar_Curso.setNextFocusableComponent(beliminar_Curso);
        bmodificar_Curso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodificar_CursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(bvisualizar_Curso)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cbpre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cbpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bmodificar_Curso)
                                .addGap(18, 18, 18)
                                .addComponent(beliminar_Curso)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bvisualizar_Curso)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(beliminar_Curso)
                    .addComponent(bmodificar_Curso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbpre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cursos", jPanel3);

        bcarga.setText("Cargar");
        bcarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcargaActionPerformed(evt);
            }
        });

        TPmensajescarga.setEditable(false);
        TPmensajescarga.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(TPmensajescarga);

        blimpiar.setText("Limpiar");
        blimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bcarga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(blimpiar)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bcarga)
                    .addComponent(blimpiar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Carga", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Reportes", jPanel5);

        bsalir.setText("Salir");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bsalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bsalir)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        System.out.println("Tamaño: " + lista_estudiante.tamaño());
        System.out.println(lista_estudiante.estaVacia());
        /*if (!lista_estudiante.estaVacia()) {
            lista_estudiante.imprimir();
        }*/
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_bsalirActionPerformed

    private void txtcorreo_EstudianteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcorreo_EstudianteMouseClicked
        // TODO add your handling code here:
        txtcorreo_Estudiante.setText("");
    }//GEN-LAST:event_txtcorreo_EstudianteMouseClicked

    private void txtcorreo_EstudianteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcorreo_EstudianteFocusGained
        // TODO add your handling code here:
        txtcorreo_Estudiante.setText("");
    }//GEN-LAST:event_txtcorreo_EstudianteFocusGained

    private void txtcreditos_EstudianteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcreditos_EstudianteMouseClicked
        // TODO add your handling code here:
        txtcreditos_Estudiante.setText("");
    }//GEN-LAST:event_txtcreditos_EstudianteMouseClicked

    private void txtcreditos_EstudianteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcreditos_EstudianteFocusGained
        // TODO add your handling code here:
        txtcreditos_Estudiante.setText("");
    }//GEN-LAST:event_txtcreditos_EstudianteFocusGained

    private void txtnombre_EstudianteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtnombre_EstudianteMouseClicked
        // TODO add your handling code here:
        txtnombre_Estudiante.setText("");
    }//GEN-LAST:event_txtnombre_EstudianteMouseClicked

    private void txtnombre_EstudianteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnombre_EstudianteFocusGained
        // TODO add your handling code here:
        txtnombre_Estudiante.setText("");
    }//GEN-LAST:event_txtnombre_EstudianteFocusGained

    private void bagregar_EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregar_EActionPerformed
        // TODO add your handling code here:
        String Carne_EstudianteC = txtcarne_Estudiante.getText();
        String Cui_EstudianteC = txtcui_Estudiante.getText();
        String Nombre_Estudiante = txtnombre_Estudiante.getText();
        String Correo_Estudiante = txtcorreo_Estudiante.getText();
        String Credito_EstudianteC = txtcreditos_Estudiante.getText();
        if (Carne_EstudianteC.equals("") || Cui_EstudianteC.equals("") || Nombre_Estudiante.equals("") || Correo_Estudiante.equals("") || Credito_EstudianteC.equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos", "Datos Faltantes", JOptionPane.PLAIN_MESSAGE);
        } else {
            int Carne_Estudiante = Integer.parseInt(Carne_EstudianteC);
            long Cui_Estudiante = Long.parseLong(Cui_EstudianteC);
            int Credito_Estudiante = Integer.parseInt(Credito_EstudianteC);
            String Contraseña_Estudiante = Carne_EstudianteC.substring(5).concat(Cui_EstudianteC.substring(0, 2));
            if (accion_Estudiante.equals("guardar")) {
                txtcontraseña_Estudiante.setText(Contraseña_Estudiante);
                if (!lista_estudiante.buscar(Cui_EstudianteC)) {
                    if (!lista_estudiante.buscarCarne(Carne_EstudianteC)) {
                        if (Carne_EstudianteC.length() == 9 && Cui_EstudianteC.length() == 13 && Carne_Estudiante > 0 && Cui_Estudiante > 0 && Credito_Estudiante > 0) {
                            lista_estudiante.addPrimero(Carne_EstudianteC, Cui_EstudianteC, Nombre_Estudiante, Correo_Estudiante, Credito_EstudianteC, Contraseña_Estudiante, null);
                            //lista_estudiante.imprimir();
                            JOptionPane.showMessageDialog(null, "El estudiante se ingresó correctamente", "Usuario Guardado", JOptionPane.PLAIN_MESSAGE);
                            llenartablaEstudiante = new String[lista_estudiante.tamaño()][6];
                            for (int i = 0; i < lista_estudiante.tamaño(); i++) {
                                llenartablaEstudiante[i][0] = (String) lista_estudiante.obtenerCarneL(i);
                                llenartablaEstudiante[i][1] = (String) lista_estudiante.obtenerCuiL(i);
                                llenartablaEstudiante[i][2] = (String) lista_estudiante.obtenerNombreL(i);
                                llenartablaEstudiante[i][3] = (String) lista_estudiante.obtenerCorreoL(i);
                                llenartablaEstudiante[i][4] = (String) lista_estudiante.obtenerCreditoL(i);
                                llenartablaEstudiante[i][5] = (String) lista_estudiante.obtenerContraseñaL(i);
                            }
                            refresh();
                            txtcarne_Estudiante.setText("");
                            txtcui_Estudiante.setText("");
                            txtnombre_Estudiante.setText("");
                            txtcorreo_Estudiante.setText("");
                            txtcreditos_Estudiante.setText("");
                            txtcontraseña_Estudiante.setText("");
                        } else {
                            JOptionPane.showMessageDialog(null, "Ocurrio un error al ingresar el estudiante", "Ingreso Fallido", JOptionPane.PLAIN_MESSAGE);
                        }
                    } else if (lista_estudiante.buscarCarne(Carne_EstudianteC)) {
                        JOptionPane.showMessageDialog(null, "Ya existe un estudiante con el mismo numero de Carné", "Ingreso Fallido", JOptionPane.PLAIN_MESSAGE);
                    }
                } else if (lista_estudiante.buscar(Cui_EstudianteC)) {
                    JOptionPane.showMessageDialog(null, "Ya existe un estudiante con el mismo CUI", "Ingreso Fallido", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (accion_Estudiante.equals("modificar")) {
                accion_Estudiante = "guardar";
                bagregar_E.setText("Guardar");
                String Contraseña_EstudianteC = txtcontraseña_Estudiante.getText();
                lista_estudiante.modificar(Indice_Estudiantes, Carne_EstudianteC, Cui_EstudianteC, Nombre_Estudiante, Correo_Estudiante, Credito_EstudianteC, Contraseña_EstudianteC, null);
                //lista_estudiante.imprimir();
                JOptionPane.showMessageDialog(null, "El estudiante se modificó correctamente", "Usuario Modificado", JOptionPane.PLAIN_MESSAGE);
                llenartablaEstudiante = new String[lista_estudiante.tamaño()][6];
                for (int i = 0; i < lista_estudiante.tamaño(); i++) {
                    llenartablaEstudiante[i][0] = (String) lista_estudiante.obtenerCarneL(i);
                    llenartablaEstudiante[i][1] = (String) lista_estudiante.obtenerCuiL(i);
                    llenartablaEstudiante[i][2] = (String) lista_estudiante.obtenerNombreL(i);
                    llenartablaEstudiante[i][3] = (String) lista_estudiante.obtenerCorreoL(i);
                    llenartablaEstudiante[i][4] = (String) lista_estudiante.obtenerCreditoL(i);
                    llenartablaEstudiante[i][5] = (String) lista_estudiante.obtenerContraseñaL(i);
                }
                refresh();
                txtcarne_Estudiante.setText("");
                txtcui_Estudiante.setText("");
                txtnombre_Estudiante.setText("");
                txtcorreo_Estudiante.setText("");
                txtcreditos_Estudiante.setText("");
                txtcontraseña_Estudiante.setText("");
                txtcarne_Estudiante.setEditable(true);
                txtcui_Estudiante.setEditable(true);
                txtcontraseña_Estudiante.setEditable(false);
                txtcontraseña_Estudiante.setFocusable(false);
                jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Estudiante: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
            }
        }
    }//GEN-LAST:event_bagregar_EActionPerformed

    private void bmodificarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodificarEActionPerformed
        // TODO add your handling code here:
        try {
            int fila = TablaEstudiantes.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Un Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                accion_Estudiante = "modificar";
                bagregar_E.setText("Modificar");
                DefaultTableModel dm = (DefaultTableModel) TablaEstudiantes.getModel();
                txtcarne_Estudiante.setText((String) dm.getValueAt(fila, 0));
                txtcui_Estudiante.setText((String) dm.getValueAt(fila, 1));
                txtnombre_Estudiante.setText((String) dm.getValueAt(fila, 2));
                txtcorreo_Estudiante.setText((String) dm.getValueAt(fila, 3));
                txtcreditos_Estudiante.setText((String) dm.getValueAt(fila, 4));
                txtcontraseña_Estudiante.setText((String) dm.getValueAt(fila, 5));
                txtcarne_Estudiante.setEditable(false);
                txtcui_Estudiante.setEditable(false);
                txtcontraseña_Estudiante.setEditable(true);
                txtcontraseña_Estudiante.setFocusable(true);
                Indice_Estudiantes = fila;
                System.out.println(Indice_Estudiantes);
                jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar Estudiante: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_bmodificarEActionPerformed

    private void beliminarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliminarEActionPerformed
        // TODO add your handling code here:
        //DefaultTableModel dm = (DefaultTableModel) TablaEstudiantes.getModel();
        try {
            int fila = TablaEstudiantes.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                System.out.println("Fila: " + fila);
                System.out.println("Tamaño: " + lista_estudiante.tamaño());
                lista_estudiante.eliminar(fila);
                //lista_estudiante.imprimir();
                System.out.println("Tamaño: " + lista_estudiante.tamaño());
                System.out.println(lista_estudiante.estaVacia());
                JOptionPane.showMessageDialog(null, "El estudiante se eliminó correctamente", "Usuario Eliminado", JOptionPane.PLAIN_MESSAGE);
                llenartablaEstudiante = new String[lista_estudiante.tamaño()][6];
                for (int i = 0; i < llenartablaEstudiante.length; i++) {
                    llenartablaEstudiante[i][0] = (String) lista_estudiante.obtenerCarneL(i);
                    llenartablaEstudiante[i][1] = (String) lista_estudiante.obtenerCuiL(i);
                    llenartablaEstudiante[i][2] = (String) lista_estudiante.obtenerNombreL(i);
                    llenartablaEstudiante[i][3] = (String) lista_estudiante.obtenerCorreoL(i);
                    llenartablaEstudiante[i][4] = (String) lista_estudiante.obtenerCreditoL(i);
                    llenartablaEstudiante[i][5] = (String) lista_estudiante.obtenerContraseñaL(i);
                }
                refresh();
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_beliminarEActionPerformed

    private void bcargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcargaActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Seleccione un archivo");
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Feel The Swag    .swag", "swag");
        jfc.addChoosableFileFilter(filter);
        int returnValue = jfc.showDialog(null, "Cargar");
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            InputStream ins = null;
            Reader r = null;
            BufferedReader br = null;
            try {
                String s;
                ins = new FileInputStream(jfc.getSelectedFile().getPath());
                r = new InputStreamReader(ins, "UTF-8");
                br = new BufferedReader(r);
                while ((s = br.readLine()) != null) {
                    String campos[] = s.split("#");
                    switch (campos.length) {
                        case 5:
                            System.out.println("Es un estudiante");
                            String Contraseña_Estudiante = campos[0].substring(5).concat(campos[1].substring(0, 2));
                            if (!lista_estudiante.buscar(campos[1])) {
                                if (!lista_estudiante.buscarCarne(campos[0])) {
                                    lista_estudiante.addPrimero(campos[0], campos[1], campos[2], campos[3], campos[4], Contraseña_Estudiante, null);
                                    StyledDocument doc = TPmensajescarga.getStyledDocument();
                                    Style style = TPmensajescarga.addStyle("Estilo", null);
                                    StyleConstants.setForeground(style, Color.green);
                                    try {
                                        doc.insertString(doc.getLength(), "ESTUDIANTE CARGADO: " + campos[1] + " - " + campos[2] + "\n", style);
                                    } catch (BadLocationException e) {

                                    }
                                    System.out.println("ESTUDIANTE CARGADO: " + campos[1] + " - " + campos[2]);
                                } else if (lista_estudiante.buscarCarne(campos[0])) {
                                    StyledDocument doc = TPmensajescarga.getStyledDocument();
                                    Style style = TPmensajescarga.addStyle("Estilo", null);
                                    StyleConstants.setForeground(style, Color.red);
                                    try {
                                        doc.insertString(doc.getLength(), "ERROR ESTUDIANTE: " + campos[1] + " - " + campos[2] + " - " + "Carné Existente\n", style);
                                    } catch (BadLocationException e) {

                                    }
                                    System.out.println("ERROR ESTUDIANTE: " + campos[1] + " - " + campos[2] + " - " + "Carné Existente");
                                }
                            } else if (lista_estudiante.buscar(campos[1])) {
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.red);
                                try {
                                    doc.insertString(doc.getLength(), "ERROR ESTUDIANTE: " + campos[1] + " - " + campos[2] + " - " + "CUI Existente\n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("ERROR ESTUDIANTE: " + campos[1] + " - " + campos[2] + " - " + "CUI Existente");
                            }
                            break;
                        case 3:
                            System.out.println("Es un catedratico");
                            String Contraseña_Catedratico = campos[0].substring(0, 4).concat(campos[1].substring(0, 3));
                            if (lista_catedratico.buscar(campos[0]) == false) {
                                lista_catedratico.addPrimero(campos[0], campos[1], campos[2], Contraseña_Catedratico);
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.green);
                                try {
                                    doc.insertString(doc.getLength(), "CATEDRATICO CARGADO: " + campos[0] + " - " + campos[1] + "\n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("CATEDRATICO CARGADO: " + campos[0] + " - " + campos[1]);
                            } else if (lista_catedratico.buscar(campos[0]) == true) {
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.red);
                                try {
                                    doc.insertString(doc.getLength(), "ERROR CATEDRATICO: " + campos[0] + " - " + campos[1] + " - " + "CUI Existente \n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("ERROR CATEDRATICO: " + campos[0] + " - " + campos[1] + " - " + "CUI Existente");
                            }
                            break;
                        case 2:
                            System.out.println("Es un semestre");
                            if (!lista_semestre.buscar(campos[0])) {
                                lista_semestre.addPrimero(campos[0], Integer.parseInt(campos[1]), null);
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.green);
                                try {
                                    doc.insertString(doc.getLength(), "SEMESTRE CARGADO: " + campos[0] + " - " + campos[1] + "\n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("SEMESTRE CARGADO: " + campos[0] + " - " + campos[1]);
                            } else if (lista_semestre.buscar(campos[0])) {
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.red);
                                try {
                                    doc.insertString(doc.getLength(), "ERROR SEMESTRE: " + campos[0] + " - " + campos[1] + " - " + "Semestre Existente \n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("ERROR SEMESTRE: " + campos[0] + " - " + campos[1] + " - " + "Semestre Existente");
                            }
                            break;
                        case 7:
                            System.out.println("Es un curso");
                            if (lista_catedratico.buscar(campos[2]) == true) {
                                String[] pre = campos[5].split(",");
                                ListaPre prer = new ListaPre();
                                for (int i = 0; i < pre.length; i++) {
                                    prer.addPrimero(Integer.parseInt(pre[i]));
                                }
                                String[] post = campos[6].split(",");
                                ListaPost postr = new ListaPost();
                                for (int i = 0; i < post.length; i++) {
                                    postr.addPrimero(Integer.parseInt(post[i]));
                                }
                                lista_curso.addPrimero(campos[0], campos[1], campos[2], campos[3], campos[4], prer, postr);
                                lista_curso.imprimir();
                                /*DefaultListModel modelo = new DefaultListModel();
                                modelo.removeAllElements();
                                for (int i = 0; i < prer.tamaño(); i++) {
                                    modelo.addElement(prer.obtener(i));
                                }
                                listapre.setModel(modelo);*/
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.green);
                                try {
                                    doc.insertString(doc.getLength(), "CURSO CARGADO: " + campos[0] + " - " + campos[1] + " - " + lista_catedratico.buscarNombre(campos[2]) + "\n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("CURSO CARGADO: " + campos[0] + " - " + campos[1] + " - " + lista_catedratico.buscarNombre(campos[2]));
                            } else if (lista_catedratico.buscar(campos[2]) == false) {
                                StyledDocument doc = TPmensajescarga.getStyledDocument();
                                Style style = TPmensajescarga.addStyle("Estilo", null);
                                StyleConstants.setForeground(style, Color.red);
                                try {
                                    doc.insertString(doc.getLength(), "ERROR CURSO: " + campos[0] + " - " + campos[1] + " - " + lista_catedratico.buscarNombre(campos[2]) + " - Catedratico Inexistente \n", style);
                                } catch (BadLocationException e) {

                                }
                                System.out.println("ERROR CURSO: " + campos[0] + " - " + campos[1] + " - " + "Catedratico Inexistente");
                            }
                            break;
                        default:
                            break;
                    }
                }
                //lista_semestre.imprimir();
                //lista_estudiante.imprimir();
                llenartablaEstudiante = new String[lista_estudiante.tamaño()][6];
                for (int i = 0; i < lista_estudiante.tamaño(); i++) {
                    llenartablaEstudiante[i][0] = (String) lista_estudiante.obtenerCarneL(i);
                    llenartablaEstudiante[i][1] = (String) lista_estudiante.obtenerCuiL(i);
                    llenartablaEstudiante[i][2] = (String) lista_estudiante.obtenerNombreL(i);
                    llenartablaEstudiante[i][3] = (String) lista_estudiante.obtenerCorreoL(i);
                    llenartablaEstudiante[i][4] = (String) lista_estudiante.obtenerCreditoL(i);
                    llenartablaEstudiante[i][5] = (String) lista_estudiante.obtenerContraseñaL(i);
                    //System.out.println(llenartablaEstudiante[i][0] + " - " + llenartablaEstudiante[i][1]);
                }
                refresh();
                //lista_catedratico.imprimir();
                llenartablaCatedratico = new String[lista_catedratico.tamaño()][4];
                for (int i = 0; i < lista_catedratico.tamaño(); i++) {
                    llenartablaCatedratico[i][0] = (String) lista_catedratico.obtenerCuiL(i);
                    llenartablaCatedratico[i][1] = (String) lista_catedratico.obtenerNombreL(i);
                    llenartablaCatedratico[i][2] = (String) lista_catedratico.obtenerCorreoL(i);
                    llenartablaCatedratico[i][3] = (String) lista_catedratico.obtenerContraseñaL(i);
                }
                refreshC();
                llenartablaCurso = new String[lista_curso.tamaño()][5];
                for (int i = 0; i < lista_curso.tamaño(); i++) {
                    llenartablaCurso[i][0] = (String) lista_curso.obtenerCodigoL(i);
                    llenartablaCurso[i][1] = (String) lista_curso.obtenerNombreL(i);
                    llenartablaCurso[i][2] = (String) lista_curso.obtenerCuiL(i);
                    llenartablaCurso[i][3] = (String) lista_curso.obtenerCreditoL(i);
                    llenartablaCurso[i][4] = (String) lista_curso.obtenerSeccionL(i);
                }
                refreshCurso();
            } catch (IOException | NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "No se Cargaron los Datos " + e.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);
                System.err.println(e.getMessage());
            } finally {
                if (br != null) {
                    try {
                        br.close();
                    } catch (IOException t) {
                    }
                }
                if (r != null) {
                    try {
                        r.close();
                    } catch (IOException t) {
                    }
                }
                if (ins != null) {
                    try {
                        ins.close();
                    } catch (IOException t) {
                    }
                }
            }
        }
    }//GEN-LAST:event_bcargaActionPerformed

    private void beliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliminarCActionPerformed
        // TODO add your handling code here:
        try {
            int fila = TablaCatedraticos.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                System.out.println("Fila: " + fila);
                System.out.println("Tamaño: " + lista_catedratico.tamaño());
                lista_catedratico.eliminar(fila);
                System.out.println("Tamaño: " + lista_catedratico.tamaño());
                System.out.println(lista_catedratico.estaVacia());
                JOptionPane.showMessageDialog(null, "El catedratico se eliminó correctamente", "Usuario Eliminado", JOptionPane.PLAIN_MESSAGE);
                llenartablaCatedratico = new String[lista_catedratico.tamaño()][4];
                for (int i = 0; i < llenartablaCatedratico.length; i++) {
                    llenartablaCatedratico[i][0] = (String) lista_catedratico.obtenerCuiL(i);
                    llenartablaCatedratico[i][1] = (String) lista_catedratico.obtenerNombreL(i);
                    llenartablaCatedratico[i][2] = (String) lista_catedratico.obtenerCorreoL(i);
                    llenartablaCatedratico[i][3] = (String) lista_catedratico.obtenerContraseñaL(i);
                }
                refreshC();
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_beliminarCActionPerformed

    private void bmodificarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodificarCActionPerformed
        // TODO add your handling code here:
        try {
            int fila = TablaCatedraticos.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Un Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                accion_Catedratico = "modificar";
                bagregar_C.setText("Modificar");
                DefaultTableModel dm = (DefaultTableModel) TablaCatedraticos.getModel();
                txtcui_Catedratico.setText((String) dm.getValueAt(fila, 0));
                txtnombre_Catedratico.setText((String) dm.getValueAt(fila, 1));
                txtcorreo_Catedratico.setText((String) dm.getValueAt(fila, 2));
                txtcontraseña_Catedratico.setText((String) dm.getValueAt(fila, 3));
                txtcui_Catedratico.setEditable(false);
                txtcontraseña_Catedratico.setEditable(true);
                txtcontraseña_Catedratico.setFocusable(true);
                Indice_Catedraticos = fila;
                jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar Catedratico: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
                System.out.println(Indice_Catedraticos);
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_bmodificarCActionPerformed

    private void txtnombre_CatedraticoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnombre_CatedraticoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombre_CatedraticoFocusGained

    private void txtnombre_CatedraticoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtnombre_CatedraticoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombre_CatedraticoMouseClicked

    private void txtcorreo_CatedraticoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcorreo_CatedraticoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorreo_CatedraticoFocusGained

    private void txtcorreo_CatedraticoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcorreo_CatedraticoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorreo_CatedraticoMouseClicked

    private void bagregar_CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregar_CActionPerformed
        // TODO add your handling code here:
        String Cui_Catedratico = txtcui_Catedratico.getText();
        String Nombre_Catedratico = txtnombre_Catedratico.getText();
        String Correo_Catedratico = txtcorreo_Catedratico.getText();
        if (Cui_Catedratico.equals("") || Nombre_Catedratico.equals("") || Correo_Catedratico.equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos", "Datos Faltantes", JOptionPane.PLAIN_MESSAGE);
        } else {
            long Cui_CatedraticoL = Long.parseLong(Cui_Catedratico);
            if (accion_Catedratico.equals("guardar")) {
                String Contraseña_Catedratico = Cui_Catedratico.substring(0, 4).concat(Nombre_Catedratico.substring(0, 3));
                txtcontraseña_Catedratico.setText(Contraseña_Catedratico);
                if (lista_catedratico.buscar(Cui_Catedratico) == false) {
                    if (Cui_Catedratico.length() == 13 && Cui_CatedraticoL > 0) {
                        lista_catedratico.addPrimero(Cui_Catedratico, Nombre_Catedratico, Correo_Catedratico, Contraseña_Catedratico);
                        //lista_catedratico.imprimir();
                        JOptionPane.showMessageDialog(null, "El catedratico se ingresó correctamente", "Catedratico Guardado", JOptionPane.PLAIN_MESSAGE);
                        llenartablaCatedratico = new String[lista_catedratico.tamaño()][4];
                        for (int i = 0; i < lista_catedratico.tamaño(); i++) {
                            llenartablaCatedratico[i][0] = (String) lista_catedratico.obtenerCuiL(i);
                            llenartablaCatedratico[i][1] = (String) lista_catedratico.obtenerNombreL(i);
                            llenartablaCatedratico[i][2] = (String) lista_catedratico.obtenerCorreoL(i);
                            llenartablaCatedratico[i][3] = (String) lista_catedratico.obtenerContraseñaL(i);
                        }
                        refreshC();
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrio un error al ingresar el catedratico", "Ingreso Fallido", JOptionPane.PLAIN_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Catedratico Existente", "Ingreso Fallido", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (accion_Catedratico.equals("modificar")) {
                accion_Catedratico = "guardar";
                bagregar_C.setText("Guardar");
                String Contraseña_Catedratico = txtcontraseña_Catedratico.getText();
                lista_catedratico.modificar(Indice_Catedraticos, Cui_Catedratico, Nombre_Catedratico, Correo_Catedratico, Contraseña_Catedratico);
                JOptionPane.showMessageDialog(null, "El catedratico se modificó correctamente", "Usuario Modificado", JOptionPane.PLAIN_MESSAGE);
                llenartablaCatedratico = new String[lista_catedratico.tamaño()][4];
                for (int i = 0; i < lista_catedratico.tamaño(); i++) {
                    llenartablaCatedratico[i][0] = (String) lista_catedratico.obtenerCuiL(i);
                    llenartablaCatedratico[i][1] = (String) lista_catedratico.obtenerNombreL(i);
                    llenartablaCatedratico[i][2] = (String) lista_catedratico.obtenerCorreoL(i);
                    llenartablaCatedratico[i][3] = (String) lista_catedratico.obtenerContraseñaL(i);
                }
                refreshC();
                txtcui_Catedratico.setText("");
                txtnombre_Catedratico.setText("");
                txtcorreo_Catedratico.setText("");
                txtcontraseña_Catedratico.setText("");
                txtcui_Catedratico.setEditable(true);
                txtcontraseña_Catedratico.setEditable(false);
                txtcontraseña_Catedratico.setFocusable(false);
                jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Catedratico: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
            }
        }
    }//GEN-LAST:event_bagregar_CActionPerformed

    private void bcancelar_AgregarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelar_AgregarCActionPerformed
        // TODO add your handling code here:
        if (accion_Catedratico.equals("guardar")) {
            txtcui_Catedratico.setText("");
            txtnombre_Catedratico.setText("");
            txtcorreo_Catedratico.setText("");
            txtcontraseña_Catedratico.setText("");
        } else if (accion_Catedratico.equals("modificar")) {
            accion_Catedratico = "guardar";
            bagregar_C.setText("Guardar");
            txtcui_Catedratico.setText("");
            txtnombre_Catedratico.setText("");
            txtcorreo_Catedratico.setText("");
            txtcontraseña_Catedratico.setText("");
            txtcui_Catedratico.setEditable(true);
            txtcontraseña_Catedratico.setEditable(false);
            txtcontraseña_Catedratico.setFocusable(false);
            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Catedratico: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        }
    }//GEN-LAST:event_bcancelar_AgregarCActionPerformed

    private void blimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blimpiarActionPerformed
        // TODO add your handling code here:
        TPmensajescarga.setText("");
    }//GEN-LAST:event_blimpiarActionPerformed

    private void bcancelar_AgregarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelar_AgregarEActionPerformed
        // TODO add your handling code here:
        if (accion_Estudiante.equals("guardar")) {
            txtcarne_Estudiante.setText("");
            txtcui_Estudiante.setText("");
            txtnombre_Estudiante.setText("");
            txtcorreo_Estudiante.setText("");
            txtcreditos_Estudiante.setText("");
            txtcontraseña_Estudiante.setText("");
        } else if (accion_Estudiante.equals("modificar")) {
            accion_Estudiante = "guardar";
            bagregar_E.setText("Guardar");
            txtcarne_Estudiante.setText("");
            txtcui_Estudiante.setText("");
            txtnombre_Estudiante.setText("");
            txtcorreo_Estudiante.setText("");
            txtcreditos_Estudiante.setText("");
            txtcontraseña_Estudiante.setText("");
            txtcarne_Estudiante.setEditable(true);
            txtcui_Estudiante.setEditable(true);
            txtcontraseña_Estudiante.setEditable(false);
            txtcontraseña_Estudiante.setFocusable(false);
            jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Estudiante: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        }
    }//GEN-LAST:event_bcancelar_AgregarEActionPerformed

    private void bcancelar_AgregarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelar_AgregarCursoActionPerformed
        // TODO add your handling code here:
        if (accion_Curso.equals("guardar")) {
            txtCodigo_Curso.setText("");
            txtNombre_Curso.setText("");
            txtCuiC_Curso.setText("");
            txtCreditos_Curso.setText("");
            txtSeccion_Curso.setText("");
            txtPreR.setText("");
            txtPostR.setText("");
        } else if (accion_Curso.equals("modificar")) {
            accion_Curso = "guardar";
            bagregar_Curso.setText("Guardar");
            txtCodigo_Curso.setText("");
            txtNombre_Curso.setText("");
            txtCuiC_Curso.setText("");
            txtCreditos_Curso.setText("");
            txtSeccion_Curso.setText("");
            txtPreR.setText("");
            txtPostR.setText("");
            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Curso: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        }
    }//GEN-LAST:event_bcancelar_AgregarCursoActionPerformed

    private void bagregar_CursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregar_CursoActionPerformed
        // TODO add your handling code here:
        String Codigo_Curso = txtCodigo_Curso.getText();
        String Nombre_Curso = txtNombre_Curso.getText();
        String Cui_Catedratico_Curso = txtCuiC_Curso.getText();
        String Creditos_Curso = txtCreditos_Curso.getText();
        String Seccion_Curso = txtSeccion_Curso.getText();
        String[] Pre_Requisitos = txtPreR.getText().split(",");
        String[] Post_Requisitos = txtPostR.getText().split(",");
        if (Codigo_Curso.equals("") || Nombre_Curso.equals("") || Cui_Catedratico_Curso.equals("") || Creditos_Curso.equals("") || Seccion_Curso.equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos", "Datos Faltantes", JOptionPane.PLAIN_MESSAGE);
        } else {
            if (accion_Curso.equals("guardar")) {
                if (lista_catedratico.buscar(Cui_Catedratico_Curso) == true) {
                    ListaPre prer = new ListaPre();
                    for (int i = 0; i < Pre_Requisitos.length; i++) {
                        prer.addPrimero(Integer.parseInt(Pre_Requisitos[i]));
                    }
                    ListaPost postr = new ListaPost();
                    for (int i = 0; i < Post_Requisitos.length; i++) {
                        postr.addPrimero(Integer.parseInt(Post_Requisitos[i]));
                    }
                    lista_curso.addPrimero(Codigo_Curso, Nombre_Curso, Cui_Catedratico_Curso, Creditos_Curso, Seccion_Curso, prer, postr);
                    JOptionPane.showMessageDialog(null, "El curso se ingresó correctamente", "Curso Guardado", JOptionPane.PLAIN_MESSAGE);
                    /*String listaprere = "";
            for (int j = 0; j < lista_curso.tamaño(); j++) {
                ListaPre prere = lista_curso.obtenerPreL(j);
                listaprere = Integer.toString(prere.obtener(0));
                for (int i = 1; i < prere.tamaño(); i++) {
                    listaprere = listaprere + "," + Integer.toString(prere.obtener(i));
                }
            }*/
                    llenartablaCurso = new String[lista_curso.tamaño()][5];
                    for (int i = 0; i < lista_curso.tamaño(); i++) {
                        llenartablaCurso[i][0] = (String) lista_curso.obtenerCodigoL(i);
                        llenartablaCurso[i][1] = (String) lista_curso.obtenerNombreL(i);
                        llenartablaCurso[i][2] = (String) lista_curso.obtenerCuiL(i);
                        llenartablaCurso[i][3] = (String) lista_curso.obtenerCreditoL(i);
                        llenartablaCurso[i][4] = (String) lista_curso.obtenerSeccionL(i);
                        //llenartablaCurso[i][5] = listaprere;
                    }
                    refreshCurso();
                    txtCodigo_Curso.setText("");
                    txtNombre_Curso.setText("");
                    txtCuiC_Curso.setText("");
                    txtCreditos_Curso.setText("");
                    txtSeccion_Curso.setText("");
                    txtPreR.setText("");
                    txtPostR.setText("");
                } else if (lista_catedratico.buscar(Cui_Catedratico_Curso) == false) {
                    JOptionPane.showMessageDialog(null, "No existe un catedratico con el CUI indicado", "Ingreso Fallido", JOptionPane.PLAIN_MESSAGE);
                }
            } else if (accion_Curso.equals("modificar")) {
                accion_Curso = "guardar";
                bagregar_Curso.setText("Guardar");
                ListaPre prer = new ListaPre();
                for (int i = 0; i < Pre_Requisitos.length; i++) {
                    prer.addPrimero(Integer.parseInt(Pre_Requisitos[i]));
                }
                ListaPost postr = new ListaPost();
                for (int i = 0; i < Post_Requisitos.length; i++) {
                    postr.addPrimero(Integer.parseInt(Post_Requisitos[i]));
                }
                lista_curso.modificar(Indice_Cursos, Codigo_Curso, Nombre_Curso, Cui_Catedratico_Curso, Creditos_Curso, Seccion_Curso, prer, postr);
                JOptionPane.showMessageDialog(null, "Los cambios se guardaron correctamente", "Curso Modificado", JOptionPane.PLAIN_MESSAGE);
                llenartablaCurso = new String[lista_curso.tamaño()][5];
                for (int i = 0; i < lista_curso.tamaño(); i++) {
                    llenartablaCurso[i][0] = (String) lista_curso.obtenerCodigoL(i);
                    llenartablaCurso[i][1] = (String) lista_curso.obtenerNombreL(i);
                    llenartablaCurso[i][2] = (String) lista_curso.obtenerCuiL(i);
                    llenartablaCurso[i][3] = (String) lista_curso.obtenerCreditoL(i);
                    llenartablaCurso[i][4] = (String) lista_curso.obtenerSeccionL(i);
                    //llenartablaCurso[i][5] = listaprere;
                }
                refreshCurso();
                jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Curso: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
                txtCodigo_Curso.setText("");
                txtNombre_Curso.setText("");
                txtCuiC_Curso.setText("");
                txtCreditos_Curso.setText("");
                txtSeccion_Curso.setText("");
                txtPreR.setText("");
                txtPostR.setText("");
            }
        }
        lista_curso.imprimir();
    }//GEN-LAST:event_bagregar_CursoActionPerformed

    private void bvisualizar_CursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bvisualizar_CursoActionPerformed
        // TODO add your handling code here:
        try {
            int fila = TablaCursos.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Un Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                //DefaultTableModel dm = (DefaultTableModel) TablaCursos.getModel();
                ListaPre prer = lista_curso.obtenerPreL(fila);
                DefaultComboBoxModel cbmodelo = new DefaultComboBoxModel();
                for (int i = 0; i < prer.tamaño(); i++) {
                    cbmodelo.addElement(prer.obtener(i));
                }
                cbpre.setModel(cbmodelo);
                ListaPost postr = lista_curso.obtenerPostL(fila);
                DefaultComboBoxModel cbmodelo2 = new DefaultComboBoxModel();
                for (int i = 0; i < postr.tamaño(); i++) {
                    cbmodelo2.addElement(postr.obtener(i));
                }
                cbpost.setModel(cbmodelo2);
            }
        } catch (HeadlessException e) {

        }
        /*DefaultListModel modelo = new DefaultListModel();
        modelo.removeAllElements();
        for (int i = 0; i < prer.tamaño(); i++) {
            modelo.addElement(prer.obtener(i));
        }
        listapre.setModel(modelo);*/
    }//GEN-LAST:event_bvisualizar_CursoActionPerformed

    private void bmodificar_CursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodificar_CursoActionPerformed
        // TODO add your handling code here:
        try {
            int fila = TablaCursos.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Un Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                accion_Curso = "modificar";
                bagregar_Curso.setText("Modificar");
                //DefaultTableModel dm = (DefaultTableModel) TablaCursos.getModel();
                ListaPre prer = lista_curso.obtenerPreL(fila);
                String listaprere = Integer.toString(prer.obtener(0));
                for (int i = 1; i < prer.tamaño(); i++) {
                    listaprere = listaprere + "," + Integer.toString(prer.obtener(i));
                }
                ListaPost postr = lista_curso.obtenerPostL(fila);
                String listapostre = Integer.toString(postr.obtener(0));
                for (int i = 1; i < postr.tamaño(); i++) {
                    listapostre = listapostre + "," + Integer.toString(postr.obtener(i));
                }
                txtCodigo_Curso.setText(lista_curso.obtenerCodigoL(fila));
                txtNombre_Curso.setText(lista_curso.obtenerNombreL(fila));
                txtCuiC_Curso.setText(lista_curso.obtenerCuiL(fila));
                txtCreditos_Curso.setText(lista_curso.obtenerCreditoL(fila));
                txtSeccion_Curso.setText(lista_curso.obtenerSeccionL(fila));
                txtPreR.setText(listaprere);
                txtPostR.setText(listapostre);
                Indice_Cursos = fila;
                jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar Curso: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_bmodificar_CursoActionPerformed

    private void beliminar_CursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliminar_CursoActionPerformed
        // TODO add your handling code here:
        try {
            int fila = TablaCursos.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun elemento", "Seleccione Elemento", JOptionPane.PLAIN_MESSAGE);
            } else {
                lista_curso.eliminar(fila);
                JOptionPane.showMessageDialog(null, "El curso se eliminó correctamente", "Curso Eliminado", JOptionPane.PLAIN_MESSAGE);
                llenartablaCurso = new String[lista_curso.tamaño()][5];
                for (int i = 0; i < llenartablaCurso.length; i++) {
                    llenartablaCurso[i][0] = (String) lista_curso.obtenerCodigoL(i);
                    llenartablaCurso[i][1] = (String) lista_curso.obtenerNombreL(i);
                    llenartablaCurso[i][2] = (String) lista_curso.obtenerCuiL(i);
                    llenartablaCurso[i][3] = (String) lista_curso.obtenerCreditoL(i);
                    llenartablaCurso[i][4] = (String) lista_curso.obtenerSeccionL(i);
                }
                refreshCurso();
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_beliminar_CursoActionPerformed

    public void refreshCurso() {
        TablaCursos.setModel(new javax.swing.table.DefaultTableModel(
                llenartablaCurso,
                new String[]{
                    "Codigo", "Nombre", "CUI Catedratico", "Créditos", "Seccion"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        TablaCursos.getTableHeader().setReorderingAllowed(false);
    }

    public void refreshC() {
        TablaCatedraticos.setModel(new javax.swing.table.DefaultTableModel(
                llenartablaCatedratico,
                new String[]{
                    "CUI", "Nombre", "Correo", "Contraseña"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        TablaCatedraticos.getTableHeader().setReorderingAllowed(false);
    }

    public void refresh() {
        TablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
                llenartablaEstudiante,
                new String[]{
                    "Carne", "CUI", "Nombre", "Correo", "Creditos", "Contraseña"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        TablaEstudiantes.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Administrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane TPmensajescarga;
    private javax.swing.JTable TablaCatedraticos;
    private javax.swing.JTable TablaCursos;
    private javax.swing.JTable TablaEstudiantes;
    private javax.swing.JButton bagregar_C;
    private javax.swing.JButton bagregar_Curso;
    private javax.swing.JButton bagregar_E;
    private javax.swing.JButton bcancelar_AgregarC;
    private javax.swing.JButton bcancelar_AgregarCurso;
    private javax.swing.JButton bcancelar_AgregarE;
    private javax.swing.JButton bcarga;
    private javax.swing.JButton beliminarC;
    private javax.swing.JButton beliminarE;
    private javax.swing.JButton beliminar_Curso;
    private javax.swing.JButton blimpiar;
    private javax.swing.JButton bmodificarC;
    private javax.swing.JButton bmodificarE;
    private javax.swing.JButton bmodificar_Curso;
    private javax.swing.JButton bsalir;
    private javax.swing.JButton bvisualizar_Curso;
    private javax.swing.JComboBox<String> cbpost;
    private javax.swing.JComboBox<String> cbpre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtCodigo_Curso;
    private javax.swing.JTextField txtCreditos_Curso;
    private javax.swing.JTextField txtCuiC_Curso;
    private javax.swing.JTextField txtNombre_Curso;
    private javax.swing.JTextField txtPostR;
    private javax.swing.JTextField txtPreR;
    private javax.swing.JTextField txtSeccion_Curso;
    private javax.swing.JTextField txtcarne_Estudiante;
    private javax.swing.JTextField txtcontraseña_Catedratico;
    private javax.swing.JTextField txtcontraseña_Estudiante;
    private javax.swing.JTextField txtcorreo_Catedratico;
    private javax.swing.JTextField txtcorreo_Estudiante;
    private javax.swing.JTextField txtcreditos_Estudiante;
    private javax.swing.JTextField txtcui_Catedratico;
    private javax.swing.JTextField txtcui_Estudiante;
    private javax.swing.JTextField txtnombre_Catedratico;
    private javax.swing.JTextField txtnombre_Estudiante;
    // End of variables declaration//GEN-END:variables
}
